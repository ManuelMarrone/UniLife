// Generated by view binder compiler. Do not edit!
package com.example.unilife.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.unilife.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAggiungiAttivitaBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView RVPartecipantiAtt;

  @NonNull
  public final Button aggiungiButton;

  @NonNull
  public final Button annulaBtn;

  @NonNull
  public final EditText dataTxt;

  @NonNull
  public final TextView textUnilife;

  @NonNull
  public final TextView titoloFragment;

  @NonNull
  public final EditText titoloTxt;

  private FragmentAggiungiAttivitaBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView RVPartecipantiAtt, @NonNull Button aggiungiButton,
      @NonNull Button annulaBtn, @NonNull EditText dataTxt, @NonNull TextView textUnilife,
      @NonNull TextView titoloFragment, @NonNull EditText titoloTxt) {
    this.rootView = rootView;
    this.RVPartecipantiAtt = RVPartecipantiAtt;
    this.aggiungiButton = aggiungiButton;
    this.annulaBtn = annulaBtn;
    this.dataTxt = dataTxt;
    this.textUnilife = textUnilife;
    this.titoloFragment = titoloFragment;
    this.titoloTxt = titoloTxt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAggiungiAttivitaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAggiungiAttivitaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_aggiungi_attivita, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAggiungiAttivitaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.RVPartecipantiAtt;
      RecyclerView RVPartecipantiAtt = ViewBindings.findChildViewById(rootView, id);
      if (RVPartecipantiAtt == null) {
        break missingId;
      }

      id = R.id.aggiungiButton;
      Button aggiungiButton = ViewBindings.findChildViewById(rootView, id);
      if (aggiungiButton == null) {
        break missingId;
      }

      id = R.id.annulaBtn;
      Button annulaBtn = ViewBindings.findChildViewById(rootView, id);
      if (annulaBtn == null) {
        break missingId;
      }

      id = R.id.dataTxt;
      EditText dataTxt = ViewBindings.findChildViewById(rootView, id);
      if (dataTxt == null) {
        break missingId;
      }

      id = R.id.textUnilife;
      TextView textUnilife = ViewBindings.findChildViewById(rootView, id);
      if (textUnilife == null) {
        break missingId;
      }

      id = R.id.titoloFragment;
      TextView titoloFragment = ViewBindings.findChildViewById(rootView, id);
      if (titoloFragment == null) {
        break missingId;
      }

      id = R.id.titoloTxt;
      EditText titoloTxt = ViewBindings.findChildViewById(rootView, id);
      if (titoloTxt == null) {
        break missingId;
      }

      return new FragmentAggiungiAttivitaBinding((ConstraintLayout) rootView, RVPartecipantiAtt,
          aggiungiButton, annulaBtn, dataTxt, textUnilife, titoloFragment, titoloTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
